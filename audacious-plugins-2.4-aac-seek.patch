--- audacious-plugins-2.4-rc2/src/aac/libmp4.c	2010-08-13 23:01:11.000000000 +0200
+++ audacious-plugins-2.4-rc2.new/src/aac/libmp4.c	2010-08-24 20:55:16.072479001 +0200
@@ -577,15 +577,13 @@
     // We are reading an MP4 file
     gint mp4track= getAACTrack(mp4file);
     NeAACDecHandle   decoder;
-    mp4AudioSpecificConfig mp4ASC;
     guchar      *buffer = NULL;
     guint       bufferSize = 0;
     gulong      samplerate = 0;
     guchar      channels = 0;
-    gulong      msDuration;
     guint       numSamples;
     gulong      sampleID = 1;
-    guint       framesize = 1024;
+    guint       framesize = 0;
     gboolean paused = FALSE;
 
     if (mp4track < 0)
@@ -607,12 +605,6 @@
         return FALSE;
     }
 
-    /* Add some hacks for SBR profile */
-    if (AudioSpecificConfig(buffer, bufferSize, &mp4ASC) >= 0) {
-        if (mp4ASC.frameLengthFlag == 1) framesize = 960;
-        if (mp4ASC.sbr_present_flag == 1) framesize *= 2;
-    }
-
     g_free(buffer);
     if( !channels ) {
         NeAACDecClose(decoder);
@@ -620,7 +612,6 @@
         return FALSE;
     }
     numSamples = mp4ff_num_samples(mp4file, mp4track);
-    msDuration = ((float)numSamples * (float)(framesize - 1.0)/(float)samplerate) * 1000;
 
     if (! playback->output->open_audio (FMT_S16_NE, samplerate, channels))
     {
@@ -645,8 +636,12 @@
 
         if (seek_value >= 0)
         {
-            sampleID = (gint64) seek_value * samplerate / 1000 / (framesize - 1);
-            playback->output->flush (seek_value);
+            /* Ignore seek requests when we don't have a framesize yet, but
+               do signal the seek_cond ! */
+            if (framesize ) {
+                sampleID = (gint64) seek_value * samplerate / 1000 / framesize;
+                playback->output->flush (seek_value);
+            }
             seek_value = -1;
             g_cond_signal (seek_cond);
         }
@@ -723,6 +718,9 @@
         }
 
         playback->output->write_audio (sampleBuffer, 2 * frameInfo.samples);
+
+        if (!framesize)
+            framesize = frameInfo.samples / frameInfo.channels;
     }
 
     playback->output->close_audio();
