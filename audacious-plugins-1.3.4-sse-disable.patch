diff -uNr audacious-plugins-1.3.4-orig/configure audacious-plugins-1.3.4/configure
--- audacious-plugins-1.3.4-orig/configure	2007-05-04 12:50:56.000000000 +0200
+++ audacious-plugins-1.3.4/configure	2007-06-01 11:57:01.000000000 +0200
@@ -1431,6 +1431,8 @@
   --disable-esd           disable esound output plugin default=enabled
   --disable-pulse         disable PulseAudio output plugin default=enabled
   --disable-coreaudio     disable CoreAudio output plugin (default=enabled)
+  --disable-altivec       disable AltiVec support. (default=enabled)
+  --disable-sse2          disable SSE2 support. (default=enabled)
   --disable-mp3           disable mp3 plugin. (default=enabled)
   --disable-rocklight     disable Rocklight vis plugin (default=enabled)
   --disable-lirc          disable LIRC plugin (default=enabled)
@@ -7574,6 +7576,15 @@
 fi
 
 
+# Check whether --enable-altivec was given.
+if test "${enable_altivec+set}" = set; then
+  enableval=$enable_altivec; enable_altivec=$enableval
+else
+  enable_altivec=yes
+
+fi
+
+if test "x$enable_altivec" = "xyes"; then
 
 for ac_header in altivec.h
 do
@@ -7729,8 +7740,8 @@
 #define ARCH_POWERPC 1
 _ACEOF
 
-     DCT64=dct64_altivec.c
-     SIMD_CFLAGS=-maltivec
+       DCT64=dct64_altivec.c
+       SIMD_CFLAGS=-maltivec
 
 else
   DCT64=dct64.c
@@ -7739,14 +7750,24 @@
 
 done
 
+fi
+
 
 
+# Check whether --enable-sse2 was given.
+if test "${enable_sse2+set}" = set; then
+  enableval=$enable_sse2; enable_sse2=$enableval
+else
+  enable_sse2=yes
+
+fi
 
-{ echo "$as_me:$LINENO: checking SSE2" >&5
+if test "x$enable_sse2" = "xyes"; then
+  { echo "$as_me:$LINENO: checking SSE2" >&5
 echo $ECHO_N "checking SSE2... $ECHO_C" >&6; }
-ac_save_CFLAGS="$CFLAGS"
-CFLAGS="-msse2"
-if test "$cross_compiling" = yes; then
+  ac_save_CFLAGS="$CFLAGS"
+  CFLAGS="-msse2"
+  if test "$cross_compiling" = yes; then
   { { echo "$as_me:$LINENO: error: cannot run test program while cross compiling
 See \`config.log' for more details." >&5
 echo "$as_me: error: cannot run test program while cross compiling
@@ -7760,12 +7781,12 @@
 cat >>conftest.$ac_ext <<_ACEOF
 /* end confdefs.h.  */
 
-#include <emmintrin.h>
-int main()
-{
-  _mm_setzero_pd();
-  return 0;
-}
+  #include <emmintrin.h>
+  int main()
+  {
+    _mm_setzero_pd();
+    return 0;
+  }
 
 _ACEOF
 rm -f conftest$ac_exeext
@@ -7795,7 +7816,7 @@
 #define HAVE_SSE2 1
 _ACEOF
 
-SIMD_CFLAGS=-msse2
+  SIMD_CFLAGS=-msse2
 else
   echo "$as_me: program exited with status $ac_status" >&5
 echo "$as_me: failed program was:" >&5
@@ -7809,6 +7830,7 @@
 fi
 
 
+fi
 
 CFLAGS="$ac_save_CFLAGS"
 
diff -uNr audacious-plugins-1.3.4-orig/configure.ac audacious-plugins-1.3.4/configure.ac
--- audacious-plugins-1.3.4-orig/configure.ac	2007-05-04 12:49:58.000000000 +0200
+++ audacious-plugins-1.3.4/configure.ac	2007-06-01 11:56:44.000000000 +0200
@@ -246,35 +246,49 @@
 
 dnl *** AltiVec
 
-AC_CHECK_HEADERS(altivec.h,
-    [AC_DEFINE(HAVE_ALTIVEC, 1, [Define to 1 if your system has AltiVec.])
-     AC_DEFINE(HAVE_ALTIVEC_H, 1, [Define to 1 if your system has an altivec.h file.])
-     AC_DEFINE(ARCH_POWERPC, 1, [Define to 1 if your system is a PowerPC.])
-     DCT64=dct64_altivec.c
-     SIMD_CFLAGS=-maltivec
-     AC_SUBST(SIMD_CFLAGS)],
-    [DCT64=dct64.c]
-)    
+AC_ARG_ENABLE(altivec,
+    [  --disable-altivec       disable AltiVec support. (default=enabled) ],
+    [enable_altivec=$enableval],
+    [enable_altivec=yes]
+)
+if test "x$enable_altivec" = "xyes"; then
+  AC_CHECK_HEADERS(altivec.h,
+      [AC_DEFINE(HAVE_ALTIVEC, 1, [Define to 1 if your system has AltiVec.])
+       AC_DEFINE(HAVE_ALTIVEC_H, 1, [Define to 1 if your system has an altivec.h file.])
+       AC_DEFINE(ARCH_POWERPC, 1, [Define to 1 if your system is a PowerPC.])
+       DCT64=dct64_altivec.c
+       SIMD_CFLAGS=-maltivec
+       AC_SUBST(SIMD_CFLAGS)],
+      [DCT64=dct64.c]
+  )    
+fi
 AC_SUBST(DCT64)
 
 dnl *** SSE2
 
-AC_MSG_CHECKING(SSE2)
-ac_save_CFLAGS="$CFLAGS"
-CFLAGS="-msse2"
-AC_TRY_RUN([
-#include <emmintrin.h>
-int main()
-{
-  _mm_setzero_pd();
-  return 0;
-}
-],
-[AC_MSG_RESULT(SSE2 yes)
-AC_DEFINE(HAVE_SSE2, 1, [Define to 1 if your system has SSE2])
-SIMD_CFLAGS=-msse2],
-[AC_MSG_RESULT(SSE2 no)],
-)
+AC_ARG_ENABLE(sse2,
+    [  --disable-sse2          disable SSE2 support. (default=enabled) ],
+    [enable_sse2=$enableval],
+    [enable_sse2=yes]
+)
+if test "x$enable_sse2" = "xyes"; then
+  AC_MSG_CHECKING(SSE2)
+  ac_save_CFLAGS="$CFLAGS"
+  CFLAGS="-msse2"
+  AC_TRY_RUN([
+  #include <emmintrin.h>
+  int main()
+  {
+    _mm_setzero_pd();
+    return 0;
+  }
+  ],
+  [AC_MSG_RESULT(SSE2 yes)
+  AC_DEFINE(HAVE_SSE2, 1, [Define to 1 if your system has SSE2])
+  SIMD_CFLAGS=-msse2],
+  [AC_MSG_RESULT(SSE2 no)],
+  )
+fi
 AC_SUBST(SIMD_CFLAGS)
 CFLAGS="$ac_save_CFLAGS"
 
